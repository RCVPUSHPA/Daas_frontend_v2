{"version":3,"file":"static/js/911.5b70f0c5.chunk.js","mappings":"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","sources":["Components/Clusters/EditCluster.js"],"sourcesContent":["import React, { useState, useContext, useRef, useEffect } from \"react\";\nimport { PoolContext } from \"../../Context/PoolContext\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport axiosInstance from \"Services/AxiosInstane\";\nimport { Slide, toast } from \"react-toastify\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport \"./css/ClusterCreationForm.css\";\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(\" \");\n}\nconst SkeletonLoader = () => (\n  <div className=\"animate-pulse\">\n    <div className=\"space-y-5 m-2\">\n      <div className=\"mx-10 p-3 rounded-md w-3/4 \">\n        <div className=\"h-7 bg-gray-200 rounded w-1/4 mb-10\"></div>\n        \n        <div className=\"space-y-6\">\n          {[1, 2, 3, 4, 5, 6].map((index) => (\n            <div key={index} className=\"flex items-center\">\n              <div className=\"w-1/4\">\n                <div className=\"h-4 bg-gray-200 rounded w-3/4\"></div>\n              </div>\n              <div className=\"flex-1\">\n                <div className=\"h-9 bg-gray-200 rounded w-full\"></div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"ml-10 mt-5 pl-5\">\n        <div className=\"h-10 bg-gray-200 rounded w-20\"></div>\n      </div>\n    </div>\n  </div>\n);\nconst EditCluster = () => {\n  const checkboxRef = useRef(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  let [cluster, setCluster] = useState({});\n  let [clusterId, setClusterId] = useState(useParams().id);\n  const [isInitialLoading, setIsInitialLoading] = useState(true);\n    const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    axiosInstance\n      .get(`${process.env.REACT_APP_BACKEND_URL}/v1/cluster/${clusterId}`,{\n        headers: {\n          Authorization: `Bearer ${token}` // Include the Bearer token in the Authorization header\n        }\n      })\n      .then((res) => {\n        setCluster({\n          type: res.data.type,\n          name: res.data.name,\n          ip: res.data.ip,\n          port: res.data.port,\n          username: res.data.username,\n          password: res.data.password,\n          tls: res.data.tls,\n        });\n        setIsInitialLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setIsInitialLoading(false);\n      });\n  }, []);\n  //pool context\n  const pc = useContext(PoolContext);\n  const token=pc.token;\n  //on change function\n  let handleOnChange = (e) => {\n    setCluster({ ...cluster, [e.target.name]: e.target.value });\n  };\n  //onChange event hanndler for toggle button\n  let handleChange = (e) => {\n\n    setCluster({ ...cluster, [e.target.name]: e.target.checked });\n  };\n  //on click function to update cluster details\n  let handleOnClick = () => {\n    setIsLoading(true);\n    console.log(cluster);\n    axiosInstance\n      .put(\n        `${process.env.REACT_APP_BACKEND_URL}/v1/update_cluster/${clusterId}`,\n        cluster,{\n          headers: {\n            Authorization: `Bearer ${token}` // Include the Bearer token in the Authorization header\n          }\n        }\n      )\n      .then((res) => {\n        if (res.data.cluster) {\n          setCluster(res.data.cluster);\n        }\n        toast.success(res.data.msg, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"light\",\n          transition: Slide,\n        });\n        navigate(\"/clusters\");\n        pc.getClusters();\n      })\n      .catch((err) => {\n        console.log(err);\n        toast.error(\"cluster modification failed\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"light\",\n          transition: Slide,\n        });\n      }).finally(()=>{\n        setIsLoading(false);\n      });\n  };\n  const Goback = () => {\n    navigate(-1);\n  };\n  if (isInitialLoading) {\n    return (\n      <div className=\"w-[95%] min-h-[90vh] m-auto rounded-md bg-white\">\n        <div className=\"flex justify-start ml=0 mt-5\">\n          <div className=\"ml-12 h-10 w-16 bg-gray-200 rounded animate-pulse\"></div>\n        </div>\n        <SkeletonLoader />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-[95%] min-h-[90vh] m-auto rounded-md bg-white\">\n       <div className=\"flex justify-start ml-2 mt-5\">\n        <div\n          onClick={Goback}\n          className=\"ml-12 bg-indigo-500 text-white px-4 py-2 rounded-md hover:bg-indigo-600 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-opacity-10\"\n        >\n        <i className=\"fas fa-arrow-left\"></i>\n        </div>\n      </div>\n      <div className=\"cluster-creation-form w-full \">\n      <div className=\"space-y-5 m-2\">\n        <div className=\"mx-10 p-3 rounded-md w-3/4\">\n          <h2 className=\"font-bold leading-7 text-gray-900 text-left\">\n            Edit Cluster\n          </h2>\n          <div className=\"text-left table-auto mt-10\">\n            <div className=\"tr\">\n              <div className=\"th\">\n                <label className=\"text-sm font-medium leading-6 text-gray-900  border-0 \">\n                  Cluster Type\n                </label>\n              </div>\n              <div className=\"td\">\n                <div className=\"mt-2 border-0 \">\n                  <select\n                    disabled\n                    onChange={handleOnChange}\n                    value={cluster.type}\n                    name=\"clusterType\"\n                    className=\"block cursor-pointer rounded-md py-1.5 text-gray-900  shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6 border-2\"\n                  >\n                    {/* block  cursor-pointer rounded-md border-2 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6  */}\n                    <option selected value=\"\" disabled>\n                      {cluster.type}\n                    </option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"tr\">\n              <div className=\"th\">\n                <label className=\"block text-sm font-medium leading-6 text-gray-900 border-0\">\n                  Cluster Name\n                </label>\n              </div>\n              <div className=\"td\">\n                <div className=\"mt-2  border-0\">\n                  <div className=\"flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600 \">\n                    <input\n                      disabled\n                      type=\"text\"\n                      name=\"name\"\n                      onChange={handleOnChange}\n                      value={cluster.name}\n                      className=\"block flex-1 rounded-md  py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6 border-2\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            {cluster.type == \"VMware\" && (\n              <div className=\"tr\">\n                <div className=\"th\">\n                  <label className=\"block text-sm font-medium leading-6 text-gray-900 border-0\">\n                    Vcenter IP / FQDN\n                  </label>\n                </div>\n                <div className=\"td\">\n                  <div className=\"mt-2  border-0\">\n                    <div className=\"flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600 \">\n                      <input\n                        type=\"text\"\n                        name=\"vcenterIP\"\n                        disabled\n                        onChange={handleOnChange}\n                        value={cluster.ip}\n                        className=\"block flex-1 rounded-md   py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6 border-2\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n            {cluster.type === \"KVM\" && (\n              <div className=\"tr\">\n                <div className=\"th\">\n                  <label className=\"block text-sm font-medium leading-6 text-gray-900 border-0\">\n                    KVM IP / FQDN\n                  </label>\n                </div>\n                <div className=\"td\">\n                  <div className=\"mt-2  border-0\">\n                    <div className=\"flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600 \">\n                      <input\n                        type=\"text\"\n                        name=\"KvmIP\"\n                        disabled\n                        onChange={handleOnChange}\n                        value={cluster.ip}\n                        className=\"block flex-1 rounded-md bg-zinc-300 py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6 border-2\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n            <div className=\"tr\">\n              <div className=\"th\">\n                <label className=\"block text-sm font-medium leading-6 text-gray-900 border-0 \">\n                  Port\n                </label>\n              </div>\n              <div className=\"td\">\n                <div className=\"mt-2  border-0\">\n                  <div className=\"flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600 \">\n                    <input\n                      onChange={handleOnChange}\n                      value={cluster.port}\n                      type=\"number\"\n                      name=\"port\"\n                      className=\"block flex-1 rounded-md bg-white bg-transparent py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6 border-2\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"tr\">\n              <div className=\"th\">\n                <label className=\"block text-sm font-medium leading-6 text-gray-900 border-0\">\n                  Username\n                </label>\n              </div>\n              <div className=\"td\">\n                <div className=\"mt-2  border-0\">\n                  <div className=\"flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600 \">\n                    <input\n                      type=\"text\"\n                      name=\"username\"\n                      onChange={handleOnChange}\n                      value={cluster.username}\n                      className=\"block flex-1 rounded-md bg-white bg-transparent py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6 border-2\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"tr\">\n              <div className=\"th\">\n                <label className=\"block text-sm font-medium leading-6 text-gray-900 border-0\">\n                  Password\n                </label>\n              </div>\n              <div className=\"td\">\n                <div className=\"mt-2  border-0\">\n                  <div className=\"flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600 \">\n                    <input\n                      type=\"password\"\n                      name=\"password\"\n                      onChange={handleOnChange}\n                      value={cluster.password}\n                      className=\"block flex-1 rounded-md bg-white bg-transparent py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6 border-2\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"tr\">\n              <div className=\"th\">\n                <label\n                  htmlFor=\"username\"\n                  className=\"block text-sm font-medium leading-6 text-gray-900 border-0\"\n                >\n                  Insecure Skip Verify\n                </label>\n              </div>\n              <div className=\"td\">\n                <div className=\"mt-2 border-0\">\n                  <label className=\"switch\">\n                    <input\n                      type=\"checkbox\"\n                      onChange={handleChange}\n                      name=\"tls\"\n                      checked={cluster.tls}\n                    />\n                    <span className=\"slider round\"></span>\n                  </label>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* Buttons */}\n        <div className=\"buttons ml-10 mt-5 pl-5 flex items-start justify-start\">\n           <button\n             onClick={handleOnClick}\n             disabled={isLoading}\n             type=\"submit\"\n             className=\"rounded-md bg-indigo-600 px-4 py-3 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 flex items-center justify-center\"\n           >\n             {isLoading ? (\n               <CircularProgress size={20} color=\"inherit\" className=\"mr-2\" />\n             ) : (\n               \"Submit\"\n             )}\n           </button>\n         </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditCluster;\n"],"names":["SkeletonLoader","_jsx","className","children","_jsxs","map","index","EditCluster","useRef","navigate","useNavigate","useLocation","cluster","setCluster","useState","clusterId","setClusterId","useParams","id","isInitialLoading","setIsInitialLoading","isLoading","setIsLoading","useEffect","axiosInstance","get","concat","process","headers","Authorization","token","then","res","type","data","name","ip","port","username","password","tls","catch","err","console","log","pc","useContext","PoolContext","handleOnChange","e","target","value","onClick","Goback","disabled","onChange","selected","htmlFor","checked","handleOnClick","put","toast","success","msg","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","transition","Slide","getClusters","error","finally","CircularProgress","size","color"],"sourceRoot":""}