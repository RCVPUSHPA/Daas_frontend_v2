{"version":3,"file":"static/js/156.60d08c59.chunk.js","mappings":"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","sources":["Components/Clusters/ClusterCreationForm.js"],"sourcesContent":["import React, { useState, useContext, useRef } from \"react\";\nimport { PoolContext } from \"../../Context/PoolContext\";\nimport \"./css/ClusterCreationForm.css\";\nimport axiosInstance from \"Services/AxiosInstane\";\nimport { Slide, toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(\" \");\n}\n\nconst ClusterCreationForm = () => {\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  // let obj = useOutletContext();\n  const checkboxRef = useRef(null);\n  //pool context\n  const pc = useContext(PoolContext);\n  const token=pc.token;\n  let clusterType = [\"VMware\", \"KVM\"];\n  let [isDisabled, setIsDisabled] = useState(false);\n  let templates = [];\n  //state\n  const [clusterDetails, setClusterDetails] = useState({\n    type: \"\",\n    name: \"\",\n    ip: \"\",\n    port: \"\",\n    username: \"\",\n    password: \"\",\n    tls: false,\n  });\n  //on change function\n  let handleOnChange = (e) => {\n    if (e.target.name == \"type\" && e.target.value == \"KVM\") {\n      setIsDisabled(true);\n    } else {\n      setIsDisabled(false);\n    }\n    setClusterDetails({ ...clusterDetails, [e.target.name]: e.target.value });\n  };\n  //on click function\n  let handleOnClick = () => {\n    setIsLoading(true);\n    setError(null);\n    console.log(clusterDetails);\n    axiosInstance\n      .post(\n        `${process.env.REACT_APP_BACKEND_URL}/v1/create_cluster`,\n        clusterDetails,{\n          headers: {\n            Authorization: `Bearer ${token}` // Include the Bearer token in the Authorization header\n          }\n        }\n      )\n      .then((res) => {\n        let msg = res.data.msg;\n        let cluster = res.data.cluster;\n        toast.success(msg, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"light\",\n          transition: Slide,\n        });\n        pc.setAvailableClusters([...pc.availableClusters, cluster]);\n        pc.setIsClusterAvailable(true);\n        navigate(\"/clusters\");\n        setClusterDetails({\n          type: \"\",\n          name: \"\",\n          ip: \"\",\n          port: \"\",\n          username: \"\",\n          password: \"\",\n          tls: false,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        toast.error(\"Pool creation failed\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"light\",\n          transition: Slide,\n        });\n      }).finally(() => {\n        setIsLoading(false);\n      });\n  };\n  //onChange event hanndler for toggle button\n  let handleChange = (e) => {\n    setClusterDetails({ ...clusterDetails, tls: e.target.checked });\n  };\n  const Goback = () => {\n    navigate(-1);\n  };\n  return (\n    <div className=\"min-h-[90vh] w-[95%] mx-auto bg-white\">\n      <div className=\"flex justify-start ml=0 mt-5\">\n        <div\n          onClick={Goback}\n          className=\"ml-12 bg-indigo-500 text-white px-4 py-2 rounded-md hover:bg-indigo-600 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-opacity-10\"\n        >\n        <i className=\"fas fa-arrow-left\"></i>\n        </div>\n      </div>\n      <div className=\"cluster-creation-form w-full \">\n        <div className=\"space-y-5 m-2\">\n          <div className=\"bg-white mx-10 p-3  w-3/4\">\n            <h2 className=\"font-bold leading-7 text-indigo-700\">\n              Create Cluster\n            </h2>\n            <div className=\"text-left table-auto \">\n              <div className=\"tr\">\n                <div className=\"th\">\n                  <label className=\"block text-sm font-medium leading-6 text-gray-900  border-0\">\n                    Cluster Type\n                  </label>\n                </div>\n                <div className=\"td\">\n                  <div className=\"mt-2 border-0 \">\n                    <select\n                      onChange={handleOnChange}\n                      value={clusterDetails.type}\n                      name=\"type\"\n                      className=\"block  cursor-pointer rounded-md border-2 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6 \"\n                    >\n                      <option selected value=\"\" disabled>\n                        Cluster Type\n                      </option>\n                      {clusterType.map((item) => {\n                        return (\n                          <option\n                            key={item}\n                            value={item}\n                            className=\"capitalize px-1\"\n                          >\n                            {item}\n                          </option>\n                        );\n                      })}\n                    </select>\n                  </div>\n                </div>\n              </div>\n              {clusterDetails.type == \"KVM\" && (\n                <div className=\"text-red-500\">\n                  KVM clusters will be available in the upcoming version.\n                </div>\n              )}\n              <div className=\"tr\">\n                <div className=\"th\">\n                  <label className=\"block text-sm font-medium leading-6 text-gray-900 border-0\">\n                    Cluster Name\n                  </label>\n                </div>\n                <div className=\"td\">\n                  <div className=\"mt-2  border-0\">\n                    <div className=\"flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600\">\n                      <input\n                        type=\"text\"\n                        name=\"name\"\n                        disabled={isDisabled ? true : false}\n                        onChange={handleOnChange}\n                        value={clusterDetails.name}\n                        className={classNames(\n                          isDisabled\n                            ? \"bg-gray-200 border-slate-300\"\n                            : \"bg-white bg-transparent\",\n                          \"block flex-1 rounded-md py-2 px-3 text-base text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6 border-2\"\n                        )}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {clusterDetails.type == \"VMware\" && (\n                <div className=\"tr\">\n                  <div className=\"th\">\n                    <label className=\"block text-sm font-medium leading-6 text-gray-900 border-0\">\n                      Vcenter IP / FQDN\n                    </label>\n                  </div>\n                  <div className=\"td\">\n                    <div className=\"mt-2  border-0\">\n                      <div className=\"flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600\">\n                        <input\n                          type=\"text\"\n                          name=\"ip\"\n                          disabled={isDisabled ? true : false}\n                          onChange={handleOnChange}\n                          value={clusterDetails.ip}\n                          className={classNames(\n                            isDisabled\n                              ? \"bg-gray-200 border-slate-300 w-300\"\n                              : \" bg-white bg-transparent\",\n                            \"block flex-1 rounded-md py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6 border-2 \"\n                          )}\n                          // className=\"block flex-1 rounded-md bg-white bg-transparent py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6 border-2\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n              {clusterDetails.type === \"KVM\" && (\n                <div className=\"tr\">\n                  <div className=\"th\">\n                    <label className=\"block text-sm font-medium leading-6 text-gray-900 border-0\">\n                      KVM IP / FQDN\n                    </label>\n                  </div>\n                  <div className=\"td\">\n                    <div className=\"mt-2  border-0\">\n                      <div className=\"flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600\">\n                        <input\n                          type=\"text\"\n                          name=\"ip\"\n                          disabled={isDisabled ? true : false}\n                          onChange={handleOnChange}\n                          value={clusterDetails.ip}\n                          className={classNames(\n                            isDisabled\n                              ? \"bg-gray-200 border-slate-300\"\n                              : \"  bg-white bg-transparent\",\n                            \"block flex-1 rounded-md py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6 border-2\"\n                          )}\n                          // className=\"block flex-1 rounded-md bg-white bg-transparent py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6 border-2\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n              <div className=\"tr\">\n                <div className=\"th\">\n                  <label className=\"block text-sm font-medium leading-6 text-gray-900 border-0 \">\n                    Port\n                  </label>\n                </div>\n                <div className=\"td\">\n                  <div className=\"mt-2  border-0\">\n                    <div className=\"flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600\">\n                      <input\n                        onChange={handleOnChange}\n                        value={clusterDetails.port}\n                        disabled={isDisabled ? true : false}\n                        type=\"number\"\n                        name=\"port\"\n                        className={classNames(\n                          isDisabled\n                            ? \"bg-gray-200 border-slate-300\"\n                            : \"  bg-white bg-transparent\",\n                          \"block flex-1 rounded-md py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6 border-2\"\n                        )}\n                        // className=\"block flex-1 rounded-md bg-white bg-transparent py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6 border-2\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"tr\">\n                <div className=\"th\">\n                  <label className=\"block text-sm font-medium leading-6 text-gray-900 border-0\">\n                    Username\n                  </label>\n                </div>\n                <div className=\"td\">\n                  <div className=\"mt-2  border-0\">\n                    <div className=\"flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600\">\n                      <input\n                        type=\"text\"\n                        name=\"username\"\n                        disabled={isDisabled ? true : false}\n                        onChange={handleOnChange}\n                        value={clusterDetails.username}\n                        className={classNames(\n                          isDisabled\n                            ? \"bg-gray-200 border-slate-300\"\n                            : \"  bg-white bg-transparent\",\n                          \"block flex-1 rounded-md py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6 border-2\"\n                        )}\n                        // className=\"block flex-1 rounded-md bg-white bg-transparent py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6 border-2\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"tr\">\n                <div className=\"th\">\n                  <label className=\"block text-sm font-medium leading-6 text-gray-900 border-0\">\n                    Password\n                  </label>\n                </div>\n                <div className=\"td\">\n                  <div className=\"mt-2  border-0\">\n                    <div className=\"flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600\">\n                      <input\n                        type=\"password\"\n                        name=\"password\"\n                        disabled={isDisabled ? true : false}\n                        onChange={handleOnChange}\n                        value={clusterDetails.password}\n                        className={classNames(\n                          isDisabled\n                            ? \"bg-gray-200 border-slate-300\"\n                            : \"  bg-white bg-transparent\",\n                          \"block flex-1 rounded-md py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6 border-2\"\n                        )}\n                        // className=\"block flex-1 rounded-md bg-white bg-transparent py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6 border-2\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"tr\">\n                <div className=\"th\">\n                  <label\n                    htmlFor=\"username\"\n                    className=\"block text-sm font-medium leading-6 text-gray-900 border-0\"\n                  >\n                    Insecure Skip Verify\n                  </label>\n                </div>\n                <div className=\"td\">\n                  <div className=\"mt-2 border-0\">\n                    <label className=\"switch\">\n                      <input\n                        type=\"checkbox\"\n                        name=\"tls\"\n                        disabled={isDisabled ? true : false}\n                        onChange={handleChange}\n                        ref={checkboxRef}\n                      />\n                      <span className=\"slider round\"></span>\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* Buttons */}\n        <div className=\"buttons ml-10 mt-5 pl-5 flex items-start justify-start\">\n      <button\n        onClick={handleOnClick}\n        disabled={isDisabled || isLoading}\n        type=\"submit\"\n        className=\"rounded-md bg-indigo-600 px-4 py-3 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 flex items-center justify-center\"\n      >\n        {isLoading ? (\n          <CircularProgress size={20} color=\"inherit\" className=\"mr-2\" />\n        ) : (\n          \"Submit\"\n        )}\n      </button>\n    </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ClusterCreationForm;\n"],"names":["classNames","_len","arguments","length","classes","Array","_key","filter","Boolean","join","ClusterCreationForm","navigate","useNavigate","isLoading","setIsLoading","useState","error","setError","checkboxRef","useRef","pc","useContext","PoolContext","token","isDisabled","setIsDisabled","clusterDetails","setClusterDetails","type","name","ip","port","username","password","tls","handleOnChange","e","target","value","_jsxs","className","children","_jsx","onClick","Goback","onChange","selected","disabled","map","item","htmlFor","checked","ref","handleOnClick","console","log","axiosInstance","post","concat","process","headers","Authorization","then","res","msg","data","cluster","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","transition","Slide","setAvailableClusters","availableClusters","setIsClusterAvailable","catch","err","finally","CircularProgress","size","color"],"sourceRoot":""}