{"version":3,"file":"static/js/942.c94e8d8b.chunk.js","mappings":"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","sources":["Components/Reports/Reports.js","Components/Reports/VamanitReports.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport \"./Reports.css\";\nimport axiosInstance from \"Services/AxiosInstane\";\nimport dayjs from \"dayjs\";\nimport Datepicker from \"react-tailwindcss-datepicker\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { RotatingLines, ColorRing } from \"react-loader-spinner\";\nimport { DatePicker, Space } from \"antd\";\nimport { set } from \"date-fns\";\nimport { PoolContext } from \"../../Context/PoolContext\";\nimport VamanitReports from \"./VamanitReports\";\nimport { useNavigate } from \"react-router-dom\";\nconst { RangePicker } = DatePicker;\n\n// Utility function to format durations\nconst formatDuration = (seconds) => {\n  if (seconds < 60) {\n    return `${Math.floor(seconds)} seconds`;\n  } else if (seconds < 3600) {\n    const minutes = Math.floor(seconds / 60);\n    return ` ${minutes} minutes ${Math.floor(seconds % 60)} seconds`;\n  } else if (seconds < 86400) {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    return `${hours} hours ${minutes} minutes ${Math.floor(\n      seconds % 60\n    )} seconds`;\n  } else if (seconds >= 86400) {\n    const days = Math.floor(seconds / 86400);\n    const hours = Math.floor((seconds % 86400) / 3600);\n    return `${days} days ${hours} hours ${Math.floor(\n      (seconds % 3600) / 60\n    )} minutes ${Math.floor(seconds % 60)} seconds`;\n  } else {\n    return \"NA\";\n  }\n};\n\nconst formatDateTime = (dateTimeString) => {\n  if (dateTimeString === \"Not Applicable\") {\n    return \"Not Applicable\";\n  } else {\n    const date = new Date(dateTimeString);\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear().toString();\n    const hours = date.getHours().toString().padStart(2, \"0\");\n    const minutes = date.getMinutes().toString().padStart(2, \"0\");\n    const seconds = date.getSeconds().toString().padStart(2, \"0\");\n    return `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`;\n  }\n};\nconst formatHoursDuration = (totalDurationInSeconds) => {\n  if (!totalDurationInSeconds || totalDurationInSeconds === \"Not Applicable\") {\n    return \"Not Applicable\";\n  }\n\n  const hours = Math.floor(totalDurationInSeconds / 3600);\n  const minutes = Math.floor((totalDurationInSeconds % 3600) / 60);\n  const seconds = Math.round(totalDurationInSeconds % 60); // Round seconds\n\n  return `${hours} hours ${minutes} minutes ${seconds} seconds`;\n};\n\nconst Reports = (tokenParsed) => {\n  const [userOptions, setUserOptions] = useState([]);\n  const [user, setUser] = useState(\"All Users\");\n  const [dateRange, setDateRange] = useState({ start: \"\", end: \"\" });\n  const [value, setValue] = useState({\n    startDate: null,\n    endDate: null,\n  });\n  const [sessionReports, setSessionReports] = useState([]);\n  const [dayReports, setDayReports] = useState([]);\n  const [consolidateReports, setConsolidateReports] = useState([]);\n  const [showSessionReports, setShowSessionReports] = useState(false);\n  const [showDayReports, setShowDayReports] = useState(false);\n  const [showConsolidateReports, setShowConsolidateReports] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [print, setPrint] = useState(false);\n  const [company, setCompany] = useState({\n    company_name: \"\",\n    company_logo: \"\",\n  });\n  const [showHorizonReports, setShowHorizanReports] = useState(true);\n  \n  const [activeTab, setActiveTab] = React.useState(\"\");\n\n  const componentRef = useRef();\n  const pc = useContext(PoolContext);\n\n  const token = pc.token;\n  let Userprofileicon = tokenParsed.tokenParsed.name;\n  const today = new Date();\n  const formattedDateTime = today.toLocaleString();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n\n  useEffect(() => {\n    const { start, end } = dateRange;\n    if (!start || !end) {\n      return; // Don't fetch if start or end date is missing\n    }\n\n    setLoader(true); // Show loader before fetching users\n    axiosInstance\n      .get(\n        `${process.env.REACT_APP_HORIZON_REPORT_URL}/allusers/${start}/${end}`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      )\n      .then((response) => {\n        const sortedUsers = response.data.sort((a, b) => a.localeCompare(b));\n        setUserOptions(sortedUsers); // Assuming response.data is an array of strings\n      })\n      .catch((error) => {\n        console.error(\"Error fetching users:\", error);\n      })\n      .finally(() => {\n        setLoader(false); // Hide loader after fetching users\n      });\n  }, [dateRange]);\n\n  const fetchCompanyDetails = (reportType) => {\n    axiosInstance\n      .get(\n        `${process.env.REACT_APP_BACKEND_URL}/v1/guacamole/reports/${reportType}`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      )\n      .then((response) => {\n        const companyData = response.data.find(\n          (company) => company.report_type === reportType\n        );\n        if (companyData) {\n          setCompany({\n            company_name: companyData.company_name,\n            company_logo: companyData.company_logo,\n          });\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching company details:\", error);\n      });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log({ user, dateRange });\n  };\n\n  const handleValueChange = (dates) => {\n    if (dates && dates.length === 2) {\n      setDateRange({\n        start: dates[0].format(\"YYYY-MM-DD HH:mm:ss.SSSSSS\"),\n        end: dates[1].format(\"YYYY-MM-DD HH:mm:ss.SSSSSS\"),\n      });\n    } else {\n      // If dates are not selected or cleared, reset all reports and user options\n      setDateRange({ start: \"\", end: \"\" });\n      setSessionReports([]);\n      setDayReports([]);\n      setUserOptions([]);\n      setShowSessionReports(false);\n      setShowDayReports(false);\n      setShowConsolidateReports(false);\n    }\n  };\n  const fetchSessionReports = () => {\n    const { start, end } = dateRange;\n    if (!start || !end) {\n      console.error(\"Start date or end date is missing!\");\n      return;\n    }\n\n    setLoader(true); // Show loader before fetching session reports\n    fetchCompanyDetails(\"Session Reports\");\n\n    let url = `${process.env.REACT_APP_HORIZON_REPORT_URL}/user-session-durations/${start}/${end}`;\n    if (user !== \"All Users\") {\n      url += `/${user}`;\n    }\n\n    axiosInstance\n      .get(url, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((response) => {\n        setSessionReports(response.data);\n\n        setPrint(true);\n\n        setShowSessionReports(true); // Show session reports\n        setShowDayReports(false); // Hide day reports\n        setShowConsolidateReports(false); // Hide consolidate reports\n      })\n      .catch((error) => {\n        console.error(\"Error fetching session reports:\", error);\n      })\n      .finally(() => {\n        setLoader(false); // Hide loader after fetching session reports\n      });\n  };\n\n  const fetchDayReports = () => {\n    const { start, end } = dateRange;\n    if (!start || !end) {\n      console.error(\"Start date or end date is missing!\");\n      return;\n    }\n\n    setLoader(true); // Show loader before fetching day reports\n    fetchCompanyDetails(\"Daily Reports\");\n\n    let url = `${process.env.REACT_APP_HORIZON_REPORT_URL}/daily-report/${start}/${end}`;\n    if (user !== \"All Users\") {\n      url += `/${user}`;\n    }\n\n    axiosInstance\n      .get(url, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((response) => {\n        setDayReports(response.data);\n\n        setPrint(true);\n\n        setShowSessionReports(false); // Hide session reports\n        setShowDayReports(true); // Show day reports\n        setShowConsolidateReports(false); // Hide consolidate reports\n      })\n      .catch((error) => {\n        console.error(\"Error fetching day reports:\", error);\n      })\n      .finally(() => {\n        setLoader(false); // Hide loader after fetching day reports\n      });\n  };\n\n  const fetchConsolidateReports = () => {\n    const { start, end } = dateRange;\n    if (!start || !end) {\n      console.error(\"Start date or end date is missing!\");\n      return;\n    }\n\n    setLoader(true); // Show loader before fetching day reports\n    fetchCompanyDetails(\"Consolidate Reports\");\n\n    let url = `${process.env.REACT_APP_HORIZON_REPORT_URL}/total_durations_within_range/${start}/${end}`;\n    if (user !== \"All Users\") {\n      url += `/${user}`;\n    }\n\n    axiosInstance\n      .get(url, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((response) => {\n        setConsolidateReports(response.data);\n\n        setPrint(true);\n\n        setShowSessionReports(false); // Hide session reports\n        setShowDayReports(false); // hide day reports\n        setShowConsolidateReports(true); // Show console reports\n      })\n      .catch((error) => {\n        console.error(\"Error fetching day reports:\", error);\n      })\n      .finally(() => {\n        setLoader(false); // Hide loader after fetching day reports\n      });\n  };\n\n  // useEffect(() => {\n  //   let url = `${process.env.REACT_APP_VAMANIT_DAAS_URL}/vamanit_session_reports/2024-07-19/2024-07-24`;\n\n  //   axiosInstance.get(url).then((response) => {\n  //     console.log(\"Got response:\", response.data);\n  //   });\n  // }, []);\n  // const fetchHorizonReports = () => {\n  //   setShowHorizanReports(true);\n  //   setShowVamanitReports(false);\n  // };\n  // const fetchVamanitReports = () => {\n  //   setShowVamanitReports(true);\n  //   setShowHorizanReports(false);\n  // };\n  const navigate = useNavigate();\n  const handleSchedule = (e) => {\n    e.preventDefault();\n    navigate(\"/reportdetails\");\n  };\n  return (\n    <div>\n      <div className=\"Report_page\">\n        <div className=\"Reports_name\">\n          <h1>Reports</h1>\n          <div className=\"reports_title\">\n            <button\n              className=\"report_type\"\n              type=\"button\"\n              \n            >\n              Horizon Reports\n            </button>\n          \n           \n          </div>\n        </div>\n\n        {showHorizonReports && (\n          <form className=\"report-form\" onSubmit={handleSubmit}>\n            <div className=\"form_main_container\">\n              <div className=\"form_sub_container\">\n                <div className=\"form-group\">\n                  <label>Date Range : </label>\n                  {/* <div className=\"sm:max-w-xs sm:text-sm sm:leading-6 border-0 w-full datepicker\">\n                  <Datepicker\n                    toggleClassName=\"absolute bg-indigo-600 rounded-r-lg text-white right-0 h-full px-4 text-gray-400 focus:outline-none disabled:opacity-40 disabled:cursor-not-allowed\"\n                    inputClassName=\"border-2 rounded h-full w-full p-3 sm:max-w-xs sm:text-sm sm:leading-6 text-sm datepicker-input\"\n                    separator={\"/\"}\n                    value={value}\n                    onChange={handleValueChange}\n                    showShortcuts={true}\n                    primaryColor={\"indigo\"}\n                  />\n                </div> */}\n                  <RangePicker\n                    onChange={handleValueChange}\n                    showTime={{\n                      hideDisabledOptions: true,\n                      defaultValue: [\n                        dayjs(\"00:00:00\", \"HH:mm:ss\"),\n                        dayjs(\"23:59:59\", \"HH:mm:ss\"),\n                      ],\n                    }}\n                    format=\"YYYY-MM-DD HH:mm:ss\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"user\">Select User : </label>\n                  <select\n                    id=\"user\"\n                    value={user}\n                    onChange={(e) => setUser(e.target.value)}\n                  >\n                    <option value=\"All Users\">All Users</option>\n                    {userOptions.map((userName, index) => (\n                      <option key={index} value={userName}>\n                        {userName}\n                      </option>\n                    ))}\n                  </select>\n                  {loader && (\n                    <ColorRing\n                      visible={true}\n                      height=\"50\"\n                      width=\"50\"\n                      ariaLabel=\"color-ring-loading\"\n                      wrapperStyle={{}}\n                      wrapperClass=\"color-ring-wrapper\"\n                      colors={[\n                        \"#3725dddc\",\n                        \"#3725dddc\",\n                        \"#3725dddc\",\n                        \"#3725dddc\",\n                        \"#3725dddc\",\n                      ]}\n                    />\n                  )}\n                </div>\n              </div>\n              <div className=\"tab_container\">\n                \n                <div className=\"tab_header\">\n                  <div className=\"tab_buttons_group\">\n                    <button\n                      className={`tab_button ${\n                        activeTab === \"session\" ? \"active\" : \"\"\n                      }`}\n                      type=\"button\"\n                      onClick={() => {\n                        setActiveTab(\"session\");\n                        fetchSessionReports();\n                      }}\n                    >\n                      Session Reports\n                    </button>\n                    <button\n                      className={`tab_button ${\n                        activeTab === \"day\" ? \"active\" : \"\"\n                      }`}\n                      type=\"button\"\n                      onClick={() => {\n                        setActiveTab(\"day\");\n                        fetchDayReports();\n                      }}\n                    >\n                      Day Reports\n                    </button>\n                    <button\n                      className={`tab_button ${\n                        activeTab === \"consolidate\" ? \"active\" : \"\"\n                      }`}\n                      type=\"button\"\n                      onClick={() => {\n                        setActiveTab(\"consolidate\");\n                        fetchConsolidateReports();\n                      }}\n                    >\n                      Consolidate Reports\n                    </button>\n                  </div>\n                  {print && (\n                    <button\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={handlePrint}\n                    >\n                      Print\n                    </button>\n                  )}\n                </div>\n                {dateRange.start===\"\" && dateRange.end==\"\" &&<div className=\"text-gray-500 mt-20 \">Please select Date Range</div>}\n              </div>\n            </div>\n            <div ref={componentRef}>\n              {/* Display Session Reports */}\n\n              {showSessionReports && sessionReports.length > 0 && (\n                <div className=\"Report_container fixed-header\">\n                  <table>\n                    <thead className=\"report_thead\">\n                      <tr>\n                        <th colSpan={3} className=\"company_name\">\n                          <h3 style={{ color: \"black\" }}>\n                            Company Name :{\" \"}\n                            <span style={{ color: \"gray\" }}>\n                              {\" \"}\n                              {company.company_name}\n                            </span>{\" \"}\n                          </h3>\n                        </th>\n                        <th rowSpan={2} className=\"company_logo\">\n                          <img\n                            src={`data:image/png;base64,${company.company_logo}`}\n                            alt=\"Company Logo\"\n                            className=\"company-logo\"\n                          />\n                        </th>\n                      </tr>\n                      <tr>\n                        <th>\n                          Date Range:{\" \"}\n                          <span>\n                            {new Date(dateRange.start).toLocaleString()} -{\" \"}\n                            {new Date(dateRange.end).toLocaleString()}\n                          </span>\n                        </th>\n\n                        <th>\n                          User Name :<span>{user}</span>\n                        </th>\n                        <th>\n                          Report Type : <span>Session Reports</span>\n                        </th>\n                      </tr>\n                    </thead>\n                  </table>\n                  <table>\n                    <thead className=\"report_reports\">\n                      <tr>\n                        <th>Username</th>\n                        <th>Login Time</th>\n                        <th>Logout Time</th>\n                        <th>Machine Name</th>\n                        <th>Session Duration</th>\n                        {/* Add more headers as needed */}\n                      </tr>\n                    </thead>\n                    <tbody className=\"report_tbody\">\n                      {sessionReports.map((report, index) => (\n                        <tr key={index}>\n                          <td>{report.username}</td>\n                          <td>{formatDateTime(report.login_time)}</td>\n                          <td>{formatDateTime(report.logout_time)}</td>\n                          <td>{report.machine_name}</td>\n                          <td>{formatDuration(report.session_duration)}</td>\n                          {/* Add more cells as needed */}\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                  <table>\n                    <tr>\n                      <td>\n                        <div className=\"info-row-container\">\n                          <div className=\"generated-by\">\n                            Generated By:{\" \"}\n                            <span className=\"bold\">{Userprofileicon}</span>\n                          </div>\n                          <div className=\"date\">\n                            Date:{\" \"}\n                            <span className=\"bold\">{formattedDateTime}</span>\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              )}\n\n              {/* Display Day Reports */}\n              {showDayReports && dayReports.length > 0 && (\n                <div className=\"Report_container\">\n                  <table>\n                    <thead className=\"report_thead\">\n                      <tr>\n                        <th colSpan={3} className=\"company_name\">\n                          <h3 style={{ color: \"black\" }}>\n                            Company Name :{\" \"}\n                            <span style={{ color: \"gray\" }}>\n                              {\" \"}\n                              {company.company_name}\n                            </span>{\" \"}\n                          </h3>\n                        </th>\n                        <th rowSpan={2} className=\"company_logo\">\n                          <img\n                            src={`data:image/png;base64,${company.company_logo}`}\n                            alt=\"Company Logo\"\n                            className=\"company-logo\"\n                          />\n                        </th>\n                      </tr>\n                      <tr>\n                        <th>\n                          Date Range:{\" \"}\n                          <span>\n                            {new Date(dateRange.start).toLocaleString()} -{\" \"}\n                            {new Date(dateRange.end).toLocaleString()}\n                          </span>\n                        </th>\n\n                        <th>\n                          User Name :<span>{user}</span>\n                        </th>\n                        <th>\n                          Report Type : <span>Daily Reports</span>\n                        </th>\n                      </tr>\n                    </thead>\n                  </table>\n                  <table>\n                    <thead className=\"report_reports\">\n                      <tr>\n                        <th>Username</th>\n                        <th>Machine Name</th>\n                        <th>Date</th>\n                        <th>Day Session Count</th>\n                        <th>Daily Duration</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"report_tbody\">\n                      {dayReports.map((report, index) => (\n                        <tr key={index}>\n                          <td>{report.username}</td>\n                          <td>{report.machine_name}</td>\n                          <td>{report.date}</td>\n                          <td>{report.day_session_count}</td>\n                          <td>{formatDuration(report.daily_duration)}</td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                  <table>\n                    <tr>\n                      <td>\n                        <div className=\"info-row-container\">\n                          <div className=\"generated-by\">\n                            Generated By:{\" \"}\n                            <span className=\"bold\">{Userprofileicon}</span>\n                          </div>\n                          <div className=\"date\">\n                            Date:{\" \"}\n                            <span className=\"bold\">{formattedDateTime}</span>\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              )}\n              {/* Display Console Reports */}\n              {showConsolidateReports && consolidateReports.length > 0 && (\n                <div className=\"Report_container\">\n                  <table>\n                    <thead className=\"report_thead\">\n                      <tr>\n                        <th colSpan={3} className=\"company_name\">\n                          <h3 style={{ color: \"black\" }}>\n                            Company Name :{\" \"}\n                            <span style={{ color: \"gray\" }}>\n                              {\" \"}\n                              {company.company_name}\n                            </span>{\" \"}\n                          </h3>\n                        </th>\n                        <th rowSpan={2} className=\"company_logo\">\n                          <img\n                            src={`data:image/png;base64,${company.company_logo}`}\n                            alt=\"Company Logo\"\n                            className=\"company-logo\"\n                          />\n                        </th>\n                      </tr>\n                      <tr>\n                        <th>\n                          Date Range:{\" \"}\n                          <span>\n                            {new Date(dateRange.start).toLocaleString()} -{\" \"}\n                            {new Date(dateRange.end).toLocaleString()}\n                          </span>\n                        </th>\n\n                        <th>\n                          User Name :<span>{user}</span>\n                        </th>\n                        <th>\n                          Report Type : <span>Consolidate Reports</span>\n                        </th>\n                      </tr>\n                    </thead>\n                  </table>\n                  <table>\n                    <thead className=\"report_reports\">\n                      <tr>\n                        <th>Username</th>\n                        <th>Machine Name</th>\n                        <th>Session Count</th>\n                        <th>Total Duration</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"report_tbody\">\n                      {consolidateReports.map((report, index) => (\n                        <tr key={index}>\n                          <td>{report.username}</td>\n                          <td>{report.machine_name}</td>\n\n                          <td>{report.day_session_count}</td>\n                          <td>{formatHoursDuration(report.total_duration)}</td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                  <table>\n                    <tr>\n                      <td>\n                        <div className=\"info-row-container\">\n                          <div className=\"generated-by\">\n                            Generated By:{\" \"}\n                            <span className=\"bold\">{Userprofileicon}</span>\n                          </div>\n                          <div className=\"date\">\n                            Date:{\" \"}\n                            <span className=\"bold\">{formattedDateTime}</span>\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              )}\n            </div>\n          </form>\n        )}\n     \n      </div>\n    </div>\n  );\n};\n\nexport default Reports;\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport \"./Reports.css\";\nimport axiosInstance from \"Services/AxiosInstane\";\nimport dayjs from \"dayjs\";\nimport Datepicker from \"react-tailwindcss-datepicker\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { PoolContext } from \"../../Context/PoolContext\";\nimport { RotatingLines, ColorRing } from \"react-loader-spinner\";\nimport { DatePicker, Space } from \"antd\";\n\nimport { set } from \"date-fns\";\nconst { RangePicker } = DatePicker;\n// Utility function to format durations\nconst formatDuration = (seconds) => {\n  if (seconds < 60) {\n    return `${Math.floor(seconds)} seconds`;\n  } else if (seconds < 3600) {\n    const minutes = Math.floor(seconds / 60);\n    return ` ${minutes} minutes ${Math.floor(seconds % 60)} seconds`;\n  } else if (seconds < 86400) {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    return `${hours} hours ${minutes} minutes ${Math.floor(\n      seconds % 60\n    )} seconds`;\n  } else if (seconds >= 86400) {\n    const days = Math.floor(seconds / 86400);\n    const hours = Math.floor((seconds % 86400) / 3600);\n    return `${days} days ${hours} hours ${Math.floor(\n      (seconds % 3600) / 60\n    )} minutes ${Math.floor(seconds % 60)} seconds`;\n  } else {\n    return \"NA\";\n  }\n};\n\nconst formatDateTime = (dateTimeString) => {\n  if (dateTimeString === \"Not Applicable\") {\n    return \"Not Applicable\";\n  } else {\n    const date = new Date(dateTimeString);\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear().toString();\n    const hours = date.getHours().toString().padStart(2, \"0\");\n    const minutes = date.getMinutes().toString().padStart(2, \"0\");\n    const seconds = date.getSeconds().toString().padStart(2, \"0\");\n    return `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`;\n  }\n};\nconst formatHoursDuration = (totalDurationInSeconds) => {\n  if (!totalDurationInSeconds || totalDurationInSeconds === \"Not Applicable\") {\n    return \"Not Applicable\";\n  }\n\n  const hours = Math.floor(totalDurationInSeconds / 3600);\n  const minutes = Math.floor((totalDurationInSeconds % 3600) / 60);\n  const seconds = Math.round(totalDurationInSeconds % 60); // Round seconds\n\n  return `${hours} hours ${minutes} minutes ${seconds} seconds`;\n};\n\nconst VamanitReports = (tokenParsed) => {\n  const [userOptions, setUserOptions] = useState([]);\n  const [user, setUser] = useState(\"All Users\");\n  const [dateRange, setDateRange] = useState({ start: \"\", end: \"\" });\n  const [value, setValue] = useState({\n    startDate: null,\n    endDate: null,\n  });\n  const [sessionReports, setSessionReports] = useState([]);\n  const [dayReports, setDayReports] = useState([]);\n  const [showSessionReports, setShowSessionReports] = useState(false);\n  const [showDayReports, setShowDayReports] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [print, setPrint] = useState(false);\n  const [company, setCompany] = useState({\n    company_name: \"\",\n    company_logo: \"\",\n  });\n  const [consolidateReports, setConsolidateReports] = useState([]);\n  const [showConsolidateReports, setShowConsolidateReports] = useState(false);\n  const [activeTab, setActiveTab] = React.useState(\"\");\n  \n  const pc = useContext(PoolContext);\n\n \n  const componentRef = useRef();\n  const token = pc.token;\n  let Userprofile = tokenParsed.tokenParsed.name;\n  const today = new Date();\n  const formattedDateTime = today.toLocaleString();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n  //   const downloadPDF = async () => {\n  //     const { start, end } = dateRange;\n  //     try {\n  //         const response = await axiosInstance.post(\n  //             `${process.env.REACT_APP_BACKEND_URL}/v1/guacamole/generate_session_report/${start}/${end}`,\n\n  //             { responseType: 'blob' } // Important for downloading files\n  //         );\n\n  //         const url = window.URL.createObjectURL(new Blob([response.data]));\n  //         const link = document.createElement('a');\n  //         link.href = url;\n  //         link.setAttribute('download', 'session_report.pdf');\n  //         document.body.appendChild(link);\n  //         link.click();\n  //         link.remove();\n  //     } catch (error) {\n  //         console.error('Error downloading PDF:', error);\n  //     }\n  // };\n\n  useEffect(() => {\n    const { start, end } = dateRange;\n    if (!start || !end) {\n      return; // Don't fetch if start or end date is missing\n    }\n\n    setLoader(true); // Show loader before fetching users\n    axiosInstance\n      .get(\n        `${process.env.REACT_APP_BACKEND_URL}/v1/guacamole/vamanit_allusers/${start}/${end}`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`, // Include the Bearer token in the Authorization header\n          },\n        }\n      )\n      .then((response) => {\n        setUserOptions(response.data); // Assuming response.data is an array of strings\n      })\n      .catch((error) => {\n        console.error(\"Error fetching users:\", error);\n      })\n      .finally(() => {\n        setLoader(false); // Hide loader after fetching users\n      });\n  }, [dateRange]);\n\n  const fetchCompanyDetails = (reportType) => {\n    axiosInstance\n      .get(\n        `${process.env.REACT_APP_BACKEND_URL}/v1/guacamole/reports/${reportType}`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      )\n      .then((response) => {\n        const companyData = response.data.find(\n          (company) => company.report_type === reportType\n        );\n        if (companyData) {\n          setCompany({\n            company_name: companyData.company_name,\n            company_logo: companyData.company_logo,\n          });\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching company details:\", error);\n      });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log({ user, dateRange });\n  };\n\n  const handleValueChange = (dates) => {\n    if (dates && dates.length === 2) {\n      setDateRange({\n        start: dates[0].format(\"YYYY-MM-DD HH:mm:ss.SSSSSS\"),\n        end: dates[1].format(\"YYYY-MM-DD HH:mm:ss.SSSSSS\"),\n      });\n    } else {\n      // If dates are not selected or cleared, reset all reports and user options\n      setDateRange({ start: \"\", end: \"\" });\n      setSessionReports([]);\n      setDayReports([]);\n      setUserOptions([]);\n      setShowSessionReports(false);\n      setShowDayReports(false);\n      setShowConsolidateReports(false);\n    }\n  };\n  const fetchSessionReports = () => {\n    const { start, end } = dateRange;\n    if (!start || !end) {\n      console.error(\"Start date or end date is missing!\");\n      return;\n    }\n\n    setLoader(true); // Show loader before fetching session reports\n    fetchCompanyDetails(\"Session Reports\");\n\n    let url = `${process.env.REACT_APP_BACKEND_URL}/v1/guacamole/vamanit_session_reports/${start}/${end}`;\n    if (user !== \"All Users\") {\n      url += `/${user}`;\n    }\n\n    axiosInstance\n      .get(url, {\n        headers: {\n          Authorization: `Bearer ${token}`, // Include the Bearer token in the Authorization header\n        },\n      })\n      .then((response) => {\n        setSessionReports(response.data);\n        setPrint(true);\n\n        setShowSessionReports(true); // Show session reports\n        setShowDayReports(false); // Hide day reports\n        setShowConsolidateReports(false); // Hide consolidate reports\n      })\n      .catch((error) => {\n        console.error(\"Error fetching session reports:\", error);\n      })\n      .finally(() => {\n        setLoader(false); // Hide loader after fetching session reports\n      });\n  };\n\n  const fetchDayReports = () => {\n    const { start, end } = dateRange;\n    if (!start || !end) {\n      console.error(\"Start date or end date is missing!\");\n      return;\n    }\n\n    setLoader(true); // Show loader before fetching day reports\n    fetchCompanyDetails(\"Daily Reports\");\n\n    let url = `${process.env.REACT_APP_BACKEND_URL}/v1/guacamole/day_reports/${start}/${end}`;\n    if (user !== \"All Users\") {\n      url += `/${user}`;\n    }\n\n    axiosInstance\n      .get(url, {\n        headers: {\n          Authorization: `Bearer ${token}`, // Include the Bearer token in the Authorization header\n        },\n      })\n      .then((response) => {\n        setDayReports(response.data);\n        setPrint(true);\n        setShowSessionReports(false); // Hide session reports\n        setShowDayReports(true); // Show day reports\n        setShowConsolidateReports(false); // Hide consolidate reports\n      })\n      .catch((error) => {\n        console.error(\"Error fetching day reports:\", error);\n      })\n      .finally(() => {\n        setLoader(false); // Hide loader after fetching day reports\n      });\n  };\n\n  const fetchConsolidateReports = () => {\n    const { start, end } = dateRange;\n    if (!start || !end) {\n      console.error(\"Start date or end date is missing!\");\n      return;\n    }\n\n    setLoader(true); // Show loader before fetching day reports\n    fetchCompanyDetails(\"Consolidate Reports\");\n\n    let url = `${process.env.REACT_APP_BACKEND_URL}/v1/guacamole/total_durations_within_range/${start}/${end}`;\n    if (user !== \"All Users\") {\n      url += `/${user}`;\n    }\n\n    axiosInstance\n      .get(url, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setConsolidateReports(response.data);\n        setPrint(true);\n        setShowSessionReports(false); // Hide session reports\n        setShowDayReports(false); // hide day reports\n        setShowConsolidateReports(true); // Show console reports\n      })\n      .catch((error) => {\n        console.error(\"Error fetching day reports:\", error);\n      })\n      .finally(() => {\n        setLoader(false); // Hide loader after fetching day reports\n      });\n  };\n\n  return (\n    <div>\n       <div className=\"Report_page\">\n        <div className=\"Reports_name\">\n          <h1>Reports</h1>\n          <div className=\"reports_title\">\n           \n            <button\n              className=\"report_type\"\n              type=\"button\"\n              \n            >\n              Vamanit Daas Reports\n            </button>\n           \n          </div>\n        </div>\n\n      <form className=\"report-form\" onSubmit={handleSubmit}>\n        <div className=\"form_main_container\">\n          <div className=\"form_sub_container\">\n            <div className=\"form-group\">\n              <label>Date Range : </label>\n              {/* <div className=\"sm:max-w-xs sm:text-sm sm:leading-6 border-0 w-full datepicker\">\n                  <Datepicker\n                    toggleClassName=\"absolute bg-indigo-600 rounded-r-lg text-white right-0 h-full px-4 text-gray-400 focus:outline-none disabled:opacity-40 disabled:cursor-not-allowed\"\n                    inputClassName=\"border-2 rounded h-full w-full p-3 sm:max-w-xs sm:text-sm sm:leading-6 text-sm datepicker-input\"\n                    separator={\"/\"}\n                    value={value}\n                    onChange={handleValueChange}\n                    showShortcuts={true}\n                    primaryColor={\"indigo\"}\n                  />\n                </div> */}\n              <RangePicker\n                onChange={handleValueChange}\n                showTime={{\n                  hideDisabledOptions: true,\n                  defaultValue: [\n                    dayjs(\"00:00:00\", \"HH:mm:ss\"),\n                    dayjs(\"23:59:59\", \"HH:mm:ss\"),\n                  ],\n                }}\n                format=\"YYYY-MM-DD HH:mm:ss\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"user\">Select User : </label>\n              <select\n                id=\"user\"\n                value={user}\n                onChange={(e) => setUser(e.target.value)}\n              >\n                <option value=\"All Users\">All Users</option>\n                {userOptions.map((userName, index) => (\n                  <option key={index} value={userName}>\n                    {userName}\n                  </option>\n                ))}\n              </select>\n              {loader && (\n                <ColorRing\n                  visible={true}\n                  height=\"50\"\n                  width=\"50\"\n                  ariaLabel=\"color-ring-loading\"\n                  wrapperStyle={{}}\n                  wrapperClass=\"color-ring-wrapper\"\n                  colors={[\n                    \"#3725dddc\",\n                    \"#3725dddc\",\n                    \"#3725dddc\",\n                    \"#3725dddc\",\n                    \"#3725dddc\",\n                  ]}\n                />\n              )}\n            </div>\n          </div>\n          <div className=\"tab_container\">\n                \n                <div className=\"tab_header\">\n                  <div className=\"tab_buttons_group\">\n                    <button\n                      className={`tab_button ${\n                        activeTab === \"session\" ? \"active\" : \"\"\n                      }`}\n                      type=\"button\"\n                      onClick={() => {\n                        setActiveTab(\"session\");\n                        fetchSessionReports();\n                      }}\n                    >\n                      Session Reports\n                    </button>\n                    <button\n                      className={`tab_button ${\n                        activeTab === \"day\" ? \"active\" : \"\"\n                      }`}\n                      type=\"button\"\n                      onClick={() => {\n                        setActiveTab(\"day\");\n                        fetchDayReports();\n                      }}\n                    >\n                      Day Reports\n                    </button>\n                    <button\n                      className={`tab_button ${\n                        activeTab === \"consolidate\" ? \"active\" : \"\"\n                      }`}\n                      type=\"button\"\n                      onClick={() => {\n                        setActiveTab(\"consolidate\");\n                        fetchConsolidateReports();\n                      }}\n                    >\n                      Consolidate Reports\n                    </button>\n                  </div>\n                  {print && (\n                    <button\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={handlePrint}\n                    >\n                      Print\n                    </button>\n                  )}\n                </div>\n                {dateRange.start===\"\" && dateRange.end==\"\" &&<div className=\"text-gray-500 mt-20 \">Please select Date Range</div>}\n              </div>\n        </div>\n        <div ref={componentRef}>\n          {/* Display Session Reports */}\n\n          {showSessionReports && sessionReports.length > 0 && (\n            <div className=\"Report_container fixed-header\">\n              <table>\n                <thead className=\"report_thead\">\n                  <tr>\n                    <th colSpan={3} className=\"company_name\">\n                      <h2>{company.company_name}</h2>\n                    </th>\n                    <th rowSpan={2} className=\"company_logo\">\n                      <img\n                        src={`data:image/png;base64,${company.company_logo}`}\n                        alt=\"Company Logo\"\n                        className=\"company-logo\"\n                      />\n                    </th>\n                  </tr>\n                  <tr>\n                    <th>\n                      Date Range:{\" \"}\n                      <span>\n                        {new Date(dateRange.start).toLocaleString()} -{\" \"}\n                        {new Date(dateRange.end).toLocaleString()}\n                      </span>\n                    </th>\n\n                    <th>\n                      User Name :<span>{user}</span>\n                    </th>\n                    <th>\n                      Report Type : <span>Session Reports</span>\n                    </th>\n                  </tr>\n                </thead>\n              </table>\n              <table>\n                <thead className=\"report_reports\">\n                  <tr>\n                    <th>Username</th>\n                    <th>Login Time</th>\n                    <th>Logout Time</th>\n                    <th>Machine Name</th>\n                    <th>Session Duration</th>\n                    {/* Add more headers as needed */}\n                  </tr>\n                </thead>\n                <tbody className=\"report_tbody\">\n                  {sessionReports.map((report, index) => (\n                    <tr key={index}>\n                      <td>{report.username}</td>\n                      <td>{formatDateTime(report.loginTime)}</td>\n                      <td>{formatDateTime(report.logoutTime)}</td>\n                      <td>{report.machineName}</td>\n                      <td>{formatDuration(report.sessionDuration)}</td>\n                      {/* Add more cells as needed */}\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <table>\n                <tr>\n                  <td>\n                    <div className=\"info-row-container\">\n                      <div className=\"generated-by\">\n                        Generated By:{\" \"}\n                        <span className=\"bold\">{Userprofile}</span>\n                      </div>\n                      <div className=\"date\">\n                        Date: <span className=\"bold\">{formattedDateTime}</span>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              </table>\n            </div>\n          )}\n\n          {/* Display Day Reports */}\n          {showDayReports && dayReports.length > 0 && (\n            <div className=\"Report_container\">\n              <table>\n                <thead className=\"report_thead\">\n                  <tr>\n                    <th colSpan={3} className=\"company_name\">\n                      <h2>{company.company_name}</h2>\n                    </th>\n                    <th rowSpan={2} className=\"company_logo\">\n                      <img\n                        src={`data:image/png;base64,${company.company_logo}`}\n                        alt=\"Company Logo\"\n                        className=\"company-logo\"\n                      />\n                    </th>\n                  </tr>\n                  <tr>\n                    <th>\n                      Date Range:{\" \"}\n                      <span>\n                        {new Date(dateRange.start).toLocaleString()} -{\" \"}\n                        {new Date(dateRange.end).toLocaleString()}\n                      </span>\n                    </th>\n\n                    <th>\n                      User Name :<span>{user}</span>\n                    </th>\n                    <th>\n                      Report Type : <span>Daily Reports</span>\n                    </th>\n                  </tr>\n                </thead>\n              </table>\n              <table>\n                <thead className=\"report_reports\">\n                  <tr>\n                    <th>Username</th>\n                    <th>Machine Name</th>\n                    <th>Date</th>\n                    <th>Day Session Count</th>\n                    <th>Daily Duration</th>\n                  </tr>\n                </thead>\n                <tbody className=\"report_tbody\">\n                  {dayReports.map((report, index) => (\n                    <tr key={index}>\n                      <td>{report.username}</td>\n                      <td>{report.machine_name}</td>\n                      <td>{report.date}</td>\n                      <td>{report.day_session_count}</td>\n                      <td>{formatDuration(report.daily_duration)}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <table>\n                <tr>\n                  <td>\n                    <div className=\"info-row-container\">\n                      <div className=\"generated-by\">\n                        Generated By:{\" \"}\n                        <span className=\"bold\">{Userprofile}</span>\n                      </div>\n                      <div className=\"date\">\n                        Date: <span className=\"bold\">{formattedDateTime}</span>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              </table>\n            </div>\n          )}\n          {/* Display Console Reports */}\n          {showConsolidateReports && consolidateReports.length > 0 && (\n            <div className=\"Report_container\">\n              <table>\n                <thead className=\"report_thead\">\n                  <tr>\n                    <th colSpan={3} className=\"company_name\">\n                      <h3 style={{ color: \"black\" }}>\n                        Company Name :{\" \"}\n                        <span style={{ color: \"gray\" }}>\n                          {\" \"}\n                          {company.company_name}\n                        </span>{\" \"}\n                      </h3>\n                    </th>\n                    <th rowSpan={2} className=\"company_logo\">\n                      <img\n                        src={`data:image/png;base64,${company.company_logo}`}\n                        alt=\"Company Logo\"\n                        className=\"company-logo\"\n                      />\n                    </th>\n                  </tr>\n                  <tr>\n                    <th>\n                      Date Range:{\" \"}\n                      <span>\n                        {new Date(dateRange.start).toLocaleString()} -{\" \"}\n                        {new Date(dateRange.end).toLocaleString()}\n                      </span>\n                    </th>\n\n                    <th>\n                      User Name :<span>{user}</span>\n                    </th>\n                    <th>\n                      Report Type : <span>Consolidate Reports</span>\n                    </th>\n                  </tr>\n                </thead>\n              </table>\n              <table>\n                <thead className=\"report_reports\">\n                  <tr>\n                    <th>Username</th>\n                    <th>Machine Name</th>\n                    <th>Session Count</th>\n                    <th>Total Duration</th>\n                  </tr>\n                </thead>\n                <tbody className=\"report_tbody\">\n                  {consolidateReports.map((report, index) => (\n                    <tr key={index}>\n                      <td>{report.username}</td>\n                      <td>{report.machine_name}</td>\n\n                      <td>{report.day_session_count}</td>\n                      <td>{formatHoursDuration(report.total_duration)}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <table>\n                <tr>\n                  <td>\n                    <div className=\"info-row-container\">\n                      <div className=\"generated-by\">\n                        Generated By: <span className=\"bold\">user</span>\n                      </div>\n                      <div className=\"date\">\n                        Date: <span className=\"bold\">{formattedDateTime}</span>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              </table>\n            </div>\n          )}\n        </div>\n      </form>\n      </div>\n    </div>\n  );\n};\n\nexport default VamanitReports;\n"],"names":["RangePicker","DatePicker","formatDuration","seconds","concat","Math","floor","minutes","hours","days","formatDateTime","dateTimeString","date","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","getHours","getMinutes","getSeconds","formatHoursDuration","totalDurationInSeconds","round","tokenParsed","userOptions","setUserOptions","useState","user","setUser","dateRange","setDateRange","start","end","value","setValue","startDate","endDate","sessionReports","setSessionReports","dayReports","setDayReports","consolidateReports","setConsolidateReports","showSessionReports","setShowSessionReports","showDayReports","setShowDayReports","showConsolidateReports","setShowConsolidateReports","loader","setLoader","print","setPrint","company","setCompany","company_name","company_logo","showHorizonReports","setShowHorizanReports","activeTab","setActiveTab","React","componentRef","useRef","token","useContext","PoolContext","Userprofileicon","name","formattedDateTime","toLocaleString","handlePrint","useReactToPrint","content","current","useEffect","axiosInstance","get","process","headers","Authorization","then","response","sortedUsers","data","sort","a","b","localeCompare","catch","error","console","finally","fetchCompanyDetails","reportType","companyData","find","report_type","useNavigate","_jsx","children","_jsxs","className","type","onSubmit","e","preventDefault","log","onChange","dates","length","format","showTime","hideDisabledOptions","defaultValue","dayjs","htmlFor","id","target","map","userName","index","ColorRing","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","onClick","fetchSessionReports","url","fetchDayReports","fetchConsolidateReports","ref","colSpan","style","color","rowSpan","src","alt","report","username","login_time","logout_time","machine_name","session_duration","day_session_count","daily_duration","total_duration","pc","Userprofile","loginTime","logoutTime","machineName","sessionDuration"],"sourceRoot":""}