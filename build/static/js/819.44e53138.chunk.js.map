{"version":3,"file":"static/js/819.44e53138.chunk.js","mappings":"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","sources":["Components/VCenter/VCenter.js"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport Popup from \"../Popup/Popup\";\nimport \"./VCenter.css\";\nimport { Slide, toast } from \"react-toastify\";\n\nexport default function VCenter() {\n  //state for all input fields\n  let [vcenter, setVcenter] = useState({\n    ip: \"\",\n    username: \"\",\n    password: \"\",\n    tls: false,\n  });\n  //state for popup\n  const [open, setOpen] = useState(false);\n  const checkboxRef = useRef(null);\n  //function for confirmation in popup menu\n  let sendData = () => {\n    console.log(vcenter);\n    reset();\n    setOpen(false);\n  };\n  //onChange event handler for all the input fields\n  let handleOnChange = (e) => {\n    setVcenter({ ...vcenter, [e.target.name]: e.target.value });\n  };\n  //opens confirmation popup and check for any empty fields\n  let handleOnClick = () => {\n    if (vcenter.ip && vcenter.username && vcenter.password) {\n      setOpen(true);\n    } else {\n      //toast is generated if any input fields are empty\n      toast.error(\"Please enter all details\", {\n        position: \"top-right\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n        transition: Slide,\n      });\n    }\n  };\n  //onChange event hanndler for toggle button\n  let handleChange = (e) => {\n    setVcenter({ ...vcenter, tls: e.target.checked });\n  };\n  //function to reset all the input fields\n  let reset = () => {\n    setVcenter({ ip: \"\", username: \"\", password: \"\", tls: false });\n    if (checkboxRef.current) {\n      checkboxRef.current.checked = false; // Uncheck the checkbox\n    }\n  };\n  return (\n    <div className=\"space-y-5 m-2 w-full\">\n      {/*Logic for popup*/}\n      <Popup\n        open={open}\n        setOpen={setOpen}\n        sendData={sendData}\n        heading=\"Please confirm\"\n        text=\"Are you sure you want to submit?\"\n        color=\"yellow\"\n      />\n      {/*VCenter Credentials Form*/}\n\n      <div className=\"border-2 border-gray-900/10 mx-10 p-3 shadow-md\">\n        <h2 className=\"font-semibold leading-7 text-gray-900\">\n          VCenter Credentials Form\n        </h2>\n        <div className=\"text-left table-auto\">\n          <div className=\"tr\">\n            <div className=\"td\">\n              <label\n                htmlFor=\"username\"\n                className=\"block text-sm font-medium leading-6 text-gray-900 border-0\"\n              >\n                IP address / FQDN\n              </label>\n            </div>\n            <div className=\"td\">\n              <div className=\"mt-2 border-0\">\n                <div className=\"flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600 sm:max-w-md\">\n                  <input\n                    type=\"text\"\n                    name=\"ip\"\n                    value={vcenter.ip}\n                    onChange={handleOnChange}\n                    className=\"block flex-1 bg-white rounded-md border-2 bg-transparent py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"tr\">\n            <div className=\"td\">\n              <label\n                htmlFor=\"username\"\n                className=\"block text-sm font-medium leading-6 text-gray-900 border-0\"\n              >\n                Username\n              </label>\n            </div>\n            <div className=\"td\">\n              <div className=\"mt-2 border-0\">\n                <div className=\"flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600 sm:max-w-md\">\n                  <input\n                    type=\"text\"\n                    name=\"username\"\n                    value={vcenter.username}\n                    onChange={handleOnChange}\n                    className=\"block flex-1 bg-white rounded-md border-2 bg-transparent py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"tr\">\n            <div className=\"td\">\n              <label\n                htmlFor=\"username\"\n                className=\"block text-sm font-medium leading-6 text-gray-900 border-0\"\n              >\n                Password\n              </label>\n            </div>\n            <div className=\"td\">\n              <div className=\"mt-2 border-0\">\n                <div className=\"flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600 sm:max-w-md\">\n                  <input\n                    type=\"password\"\n                    name=\"password\"\n                    value={vcenter.password}\n                    onChange={handleOnChange}\n                    className=\"block flex-1 bg-white rounded-md border-2 bg-transparent py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"tr\">\n            <div className=\"td\">\n              <label\n                htmlFor=\"username\"\n                className=\"block text-sm font-medium leading-6 text-gray-900 border-0\"\n              >\n                TLS\n              </label>\n            </div>\n            <div className=\"td\">\n              <div className=\"mt-2 border-0\">\n                <label className=\"switch\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"tls\"\n                    onChange={handleChange}\n                    ref={checkboxRef}\n                  />\n                  <span className=\"slider round\"></span>\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* Buttons */}\n      <div className=\"ml-10 pl-5 buttons\">\n        <button\n          type=\"reset\"\n          className=\"rounded-md bg-gray-500 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-gray-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-gray-600\"\n          onClick={reset}\n        >\n          Reset\n        </button>\n        <button\n          type=\"submit\"\n          className=\"rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n          onClick={handleOnClick}\n        >\n          Save\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"names":["VCenter","vcenter","setVcenter","useState","ip","username","password","tls","open","setOpen","checkboxRef","useRef","handleOnChange","e","target","name","value","reset","current","checked","_jsxs","className","children","_jsx","Popup","sendData","console","log","heading","text","color","htmlFor","type","onChange","ref","onClick","handleOnClick","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","transition","Slide"],"sourceRoot":""}