{"version":3,"file":"static/js/8.834d9114.chunk.js","mappings":"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","sources":["Components/Reports/VamanitReports.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport \"./Reports.css\";\nimport axiosInstance from \"Services/AxiosInstane\";\nimport dayjs from \"dayjs\";\nimport Datepicker from \"react-tailwindcss-datepicker\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { PoolContext } from \"../../Context/PoolContext\";\nimport { RotatingLines, ColorRing } from \"react-loader-spinner\";\nimport { DatePicker, Space } from \"antd\";\n\nimport { set } from \"date-fns\";\nconst { RangePicker } = DatePicker;\n// Utility function to format durations\nconst formatDuration = (seconds) => {\n  if (seconds < 60) {\n    return `${Math.floor(seconds)} seconds`;\n  } else if (seconds < 3600) {\n    const minutes = Math.floor(seconds / 60);\n    return ` ${minutes} minutes ${Math.floor(seconds % 60)} seconds`;\n  } else if (seconds < 86400) {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    return `${hours} hours ${minutes} minutes ${Math.floor(\n      seconds % 60\n    )} seconds`;\n  } else if (seconds >= 86400) {\n    const days = Math.floor(seconds / 86400);\n    const hours = Math.floor((seconds % 86400) / 3600);\n    return `${days} days ${hours} hours ${Math.floor(\n      (seconds % 3600) / 60\n    )} minutes ${Math.floor(seconds % 60)} seconds`;\n  } else {\n    return \"NA\";\n  }\n};\n\nconst formatDateTime = (dateTimeString) => {\n  if (dateTimeString === \"Not Applicable\") {\n    return \"Not Applicable\";\n  } else {\n    const date = new Date(dateTimeString);\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear().toString();\n    const hours = date.getHours().toString().padStart(2, \"0\");\n    const minutes = date.getMinutes().toString().padStart(2, \"0\");\n    const seconds = date.getSeconds().toString().padStart(2, \"0\");\n    return `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`;\n  }\n};\nconst formatHoursDuration = (totalDurationInSeconds) => {\n  if (!totalDurationInSeconds || totalDurationInSeconds === \"Not Applicable\") {\n    return \"Not Applicable\";\n  }\n\n  const hours = Math.floor(totalDurationInSeconds / 3600);\n  const minutes = Math.floor((totalDurationInSeconds % 3600) / 60);\n  const seconds = Math.round(totalDurationInSeconds % 60); // Round seconds\n\n  return `${hours} hours ${minutes} minutes ${seconds} seconds`;\n};\n\nconst VamanitReports = (tokenParsed) => {\n  const [userOptions, setUserOptions] = useState([]);\n  const [user, setUser] = useState(\"All Users\");\n  const [dateRange, setDateRange] = useState({ start: \"\", end: \"\" });\n  const [value, setValue] = useState({\n    startDate: null,\n    endDate: null,\n  });\n  const [sessionReports, setSessionReports] = useState([]);\n  const [dayReports, setDayReports] = useState([]);\n  const [showSessionReports, setShowSessionReports] = useState(false);\n  const [showDayReports, setShowDayReports] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [print, setPrint] = useState(false);\n  const [company, setCompany] = useState({\n    company_name: \"\",\n    company_logo: \"\",\n  });\n  const [consolidateReports, setConsolidateReports] = useState([]);\n  const [showConsolidateReports, setShowConsolidateReports] = useState(false);\n  const [activeTab, setActiveTab] = React.useState(\"\");\n  \n  const pc = useContext(PoolContext);\n\n \n  const componentRef = useRef();\n  const token = pc.token;\n  let Userprofile = tokenParsed.tokenParsed.name;\n  const today = new Date();\n  const formattedDateTime = today.toLocaleString();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n  //   const downloadPDF = async () => {\n  //     const { start, end } = dateRange;\n  //     try {\n  //         const response = await axiosInstance.post(\n  //             `${process.env.REACT_APP_BACKEND_URL}/v1/guacamole/generate_session_report/${start}/${end}`,\n\n  //             { responseType: 'blob' } // Important for downloading files\n  //         );\n\n  //         const url = window.URL.createObjectURL(new Blob([response.data]));\n  //         const link = document.createElement('a');\n  //         link.href = url;\n  //         link.setAttribute('download', 'session_report.pdf');\n  //         document.body.appendChild(link);\n  //         link.click();\n  //         link.remove();\n  //     } catch (error) {\n  //         console.error('Error downloading PDF:', error);\n  //     }\n  // };\n\n  useEffect(() => {\n    const { start, end } = dateRange;\n    if (!start || !end) {\n      return; // Don't fetch if start or end date is missing\n    }\n\n    setLoader(true); // Show loader before fetching users\n    axiosInstance\n      .get(\n        `${process.env.REACT_APP_BACKEND_URL}/v1/guacamole/vamanit_allusers/${start}/${end}`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`, // Include the Bearer token in the Authorization header\n          },\n        }\n      )\n      .then((response) => {\n        setUserOptions(response.data); // Assuming response.data is an array of strings\n      })\n      .catch((error) => {\n        console.error(\"Error fetching users:\", error);\n      })\n      .finally(() => {\n        setLoader(false); // Hide loader after fetching users\n      });\n  }, [dateRange]);\n\n  const fetchCompanyDetails = (reportType) => {\n    axiosInstance\n      .get(\n        `${process.env.REACT_APP_BACKEND_URL}/v1/guacamole/reports/${reportType}`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      )\n      .then((response) => {\n        const companyData = response.data.find(\n          (company) => company.report_type === reportType\n        );\n        if (companyData) {\n          setCompany({\n            company_name: companyData.company_name,\n            company_logo: companyData.company_logo,\n          });\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching company details:\", error);\n      });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log({ user, dateRange });\n  };\n\n  const handleValueChange = (dates) => {\n    if (dates && dates.length === 2) {\n      setDateRange({\n        start: dates[0].format(\"YYYY-MM-DD HH:mm:ss.SSSSSS\"),\n        end: dates[1].format(\"YYYY-MM-DD HH:mm:ss.SSSSSS\"),\n      });\n    } else {\n      // If dates are not selected or cleared, reset all reports and user options\n      setDateRange({ start: \"\", end: \"\" });\n      setSessionReports([]);\n      setDayReports([]);\n      setUserOptions([]);\n      setShowSessionReports(false);\n      setShowDayReports(false);\n      setShowConsolidateReports(false);\n    }\n  };\n  const fetchSessionReports = () => {\n    const { start, end } = dateRange;\n    if (!start || !end) {\n      console.error(\"Start date or end date is missing!\");\n      return;\n    }\n\n    setLoader(true); // Show loader before fetching session reports\n    fetchCompanyDetails(\"Session Reports\");\n\n    let url = `${process.env.REACT_APP_BACKEND_URL}/v1/guacamole/vamanit_session_reports/${start}/${end}`;\n    if (user !== \"All Users\") {\n      url += `/${user}`;\n    }\n\n    axiosInstance\n      .get(url, {\n        headers: {\n          Authorization: `Bearer ${token}`, // Include the Bearer token in the Authorization header\n        },\n      })\n      .then((response) => {\n        setSessionReports(response.data);\n        setPrint(true);\n\n        setShowSessionReports(true); // Show session reports\n        setShowDayReports(false); // Hide day reports\n        setShowConsolidateReports(false); // Hide consolidate reports\n      })\n      .catch((error) => {\n        console.error(\"Error fetching session reports:\", error);\n      })\n      .finally(() => {\n        setLoader(false); // Hide loader after fetching session reports\n      });\n  };\n\n  const fetchDayReports = () => {\n    const { start, end } = dateRange;\n    if (!start || !end) {\n      console.error(\"Start date or end date is missing!\");\n      return;\n    }\n\n    setLoader(true); // Show loader before fetching day reports\n    fetchCompanyDetails(\"Daily Reports\");\n\n    let url = `${process.env.REACT_APP_BACKEND_URL}/v1/guacamole/day_reports/${start}/${end}`;\n    if (user !== \"All Users\") {\n      url += `/${user}`;\n    }\n\n    axiosInstance\n      .get(url, {\n        headers: {\n          Authorization: `Bearer ${token}`, // Include the Bearer token in the Authorization header\n        },\n      })\n      .then((response) => {\n        setDayReports(response.data);\n        setPrint(true);\n        setShowSessionReports(false); // Hide session reports\n        setShowDayReports(true); // Show day reports\n        setShowConsolidateReports(false); // Hide consolidate reports\n      })\n      .catch((error) => {\n        console.error(\"Error fetching day reports:\", error);\n      })\n      .finally(() => {\n        setLoader(false); // Hide loader after fetching day reports\n      });\n  };\n\n  const fetchConsolidateReports = () => {\n    const { start, end } = dateRange;\n    if (!start || !end) {\n      console.error(\"Start date or end date is missing!\");\n      return;\n    }\n\n    setLoader(true); // Show loader before fetching day reports\n    fetchCompanyDetails(\"Consolidate Reports\");\n\n    let url = `${process.env.REACT_APP_BACKEND_URL}/v1/guacamole/total_durations_within_range/${start}/${end}`;\n    if (user !== \"All Users\") {\n      url += `/${user}`;\n    }\n\n    axiosInstance\n      .get(url, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setConsolidateReports(response.data);\n        setPrint(true);\n        setShowSessionReports(false); // Hide session reports\n        setShowDayReports(false); // hide day reports\n        setShowConsolidateReports(true); // Show console reports\n      })\n      .catch((error) => {\n        console.error(\"Error fetching day reports:\", error);\n      })\n      .finally(() => {\n        setLoader(false); // Hide loader after fetching day reports\n      });\n  };\n\n  return (\n    <div>\n       <div className=\"Report_page\">\n        <div className=\"Reports_name\">\n          <h1>Reports</h1>\n          <div className=\"reports_title\">\n           \n            <button\n              className=\"report_type\"\n              type=\"button\"\n              \n            >\n              Vamanit Daas Reports\n            </button>\n           \n          </div>\n        </div>\n\n      <form className=\"report-form\" onSubmit={handleSubmit}>\n        <div className=\"form_main_container\">\n          <div className=\"form_sub_container\">\n            <div className=\"form-group\">\n              <label>Date Range : </label>\n              {/* <div className=\"sm:max-w-xs sm:text-sm sm:leading-6 border-0 w-full datepicker\">\n                  <Datepicker\n                    toggleClassName=\"absolute bg-indigo-600 rounded-r-lg text-white right-0 h-full px-4 text-gray-400 focus:outline-none disabled:opacity-40 disabled:cursor-not-allowed\"\n                    inputClassName=\"border-2 rounded h-full w-full p-3 sm:max-w-xs sm:text-sm sm:leading-6 text-sm datepicker-input\"\n                    separator={\"/\"}\n                    value={value}\n                    onChange={handleValueChange}\n                    showShortcuts={true}\n                    primaryColor={\"indigo\"}\n                  />\n                </div> */}\n              <RangePicker\n                onChange={handleValueChange}\n                showTime={{\n                  hideDisabledOptions: true,\n                  defaultValue: [\n                    dayjs(\"00:00:00\", \"HH:mm:ss\"),\n                    dayjs(\"23:59:59\", \"HH:mm:ss\"),\n                  ],\n                }}\n                format=\"YYYY-MM-DD HH:mm:ss\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"user\">Select User : </label>\n              <select\n                id=\"user\"\n                value={user}\n                onChange={(e) => setUser(e.target.value)}\n              >\n                <option value=\"All Users\">All Users</option>\n                {userOptions.map((userName, index) => (\n                  <option key={index} value={userName}>\n                    {userName}\n                  </option>\n                ))}\n              </select>\n              {loader && (\n                <ColorRing\n                  visible={true}\n                  height=\"50\"\n                  width=\"50\"\n                  ariaLabel=\"color-ring-loading\"\n                  wrapperStyle={{}}\n                  wrapperClass=\"color-ring-wrapper\"\n                  colors={[\n                    \"#3725dddc\",\n                    \"#3725dddc\",\n                    \"#3725dddc\",\n                    \"#3725dddc\",\n                    \"#3725dddc\",\n                  ]}\n                />\n              )}\n            </div>\n          </div>\n          <div className=\"tab_container\">\n                \n                <div className=\"tab_header\">\n                  <div className=\"tab_buttons_group\">\n                    <button\n                      className={`tab_button ${\n                        activeTab === \"session\" ? \"active\" : \"\"\n                      }`}\n                      type=\"button\"\n                      onClick={() => {\n                        setActiveTab(\"session\");\n                        fetchSessionReports();\n                      }}\n                    >\n                      Session Reports\n                    </button>\n                    <button\n                      className={`tab_button ${\n                        activeTab === \"day\" ? \"active\" : \"\"\n                      }`}\n                      type=\"button\"\n                      onClick={() => {\n                        setActiveTab(\"day\");\n                        fetchDayReports();\n                      }}\n                    >\n                      Day Reports\n                    </button>\n                    <button\n                      className={`tab_button ${\n                        activeTab === \"consolidate\" ? \"active\" : \"\"\n                      }`}\n                      type=\"button\"\n                      onClick={() => {\n                        setActiveTab(\"consolidate\");\n                        fetchConsolidateReports();\n                      }}\n                    >\n                      Consolidate Reports\n                    </button>\n                  </div>\n                  {print && (\n                    <button\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={handlePrint}\n                    >\n                      Print\n                    </button>\n                  )}\n                </div>\n                {dateRange.start===\"\" && dateRange.end==\"\" &&<div className=\"text-gray-500 mt-20 \">Please select Date Range</div>}\n              </div>\n        </div>\n        <div ref={componentRef}>\n          {/* Display Session Reports */}\n\n          {showSessionReports && sessionReports.length > 0 && (\n            <div className=\"Report_container fixed-header\">\n              <table>\n                <thead className=\"report_thead\">\n                  <tr>\n                    <th colSpan={3} className=\"company_name\">\n                      <h2>{company.company_name}</h2>\n                    </th>\n                    <th rowSpan={2} className=\"company_logo\">\n                      <img\n                        src={`data:image/png;base64,${company.company_logo}`}\n                        alt=\"Company Logo\"\n                        className=\"company-logo\"\n                      />\n                    </th>\n                  </tr>\n                  <tr>\n                    <th>\n                      Date Range:{\" \"}\n                      <span>\n                        {new Date(dateRange.start).toLocaleString()} -{\" \"}\n                        {new Date(dateRange.end).toLocaleString()}\n                      </span>\n                    </th>\n\n                    <th>\n                      User Name :<span>{user}</span>\n                    </th>\n                    <th>\n                      Report Type : <span>Session Reports</span>\n                    </th>\n                  </tr>\n                </thead>\n              </table>\n              <table>\n                <thead className=\"report_reports\">\n                  <tr>\n                    <th>Username</th>\n                    <th>Login Time</th>\n                    <th>Logout Time</th>\n                    <th>Machine Name</th>\n                    <th>Session Duration</th>\n                    {/* Add more headers as needed */}\n                  </tr>\n                </thead>\n                <tbody className=\"report_tbody\">\n                  {sessionReports.map((report, index) => (\n                    <tr key={index}>\n                      <td>{report.username}</td>\n                      <td>{formatDateTime(report.loginTime)}</td>\n                      <td>{formatDateTime(report.logoutTime)}</td>\n                      <td>{report.machineName}</td>\n                      <td>{formatDuration(report.sessionDuration)}</td>\n                      {/* Add more cells as needed */}\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <table>\n                <tr>\n                  <td>\n                    <div className=\"info-row-container\">\n                      <div className=\"generated-by\">\n                        Generated By:{\" \"}\n                        <span className=\"bold\">{Userprofile}</span>\n                      </div>\n                      <div className=\"date\">\n                        Date: <span className=\"bold\">{formattedDateTime}</span>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              </table>\n            </div>\n          )}\n\n          {/* Display Day Reports */}\n          {showDayReports && dayReports.length > 0 && (\n            <div className=\"Report_container\">\n              <table>\n                <thead className=\"report_thead\">\n                  <tr>\n                    <th colSpan={3} className=\"company_name\">\n                      <h2>{company.company_name}</h2>\n                    </th>\n                    <th rowSpan={2} className=\"company_logo\">\n                      <img\n                        src={`data:image/png;base64,${company.company_logo}`}\n                        alt=\"Company Logo\"\n                        className=\"company-logo\"\n                      />\n                    </th>\n                  </tr>\n                  <tr>\n                    <th>\n                      Date Range:{\" \"}\n                      <span>\n                        {new Date(dateRange.start).toLocaleString()} -{\" \"}\n                        {new Date(dateRange.end).toLocaleString()}\n                      </span>\n                    </th>\n\n                    <th>\n                      User Name :<span>{user}</span>\n                    </th>\n                    <th>\n                      Report Type : <span>Daily Reports</span>\n                    </th>\n                  </tr>\n                </thead>\n              </table>\n              <table>\n                <thead className=\"report_reports\">\n                  <tr>\n                    <th>Username</th>\n                    <th>Machine Name</th>\n                    <th>Date</th>\n                    <th>Day Session Count</th>\n                    <th>Daily Duration</th>\n                  </tr>\n                </thead>\n                <tbody className=\"report_tbody\">\n                  {dayReports.map((report, index) => (\n                    <tr key={index}>\n                      <td>{report.username}</td>\n                      <td>{report.machine_name}</td>\n                      <td>{report.date}</td>\n                      <td>{report.day_session_count}</td>\n                      <td>{formatDuration(report.daily_duration)}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <table>\n                <tr>\n                  <td>\n                    <div className=\"info-row-container\">\n                      <div className=\"generated-by\">\n                        Generated By:{\" \"}\n                        <span className=\"bold\">{Userprofile}</span>\n                      </div>\n                      <div className=\"date\">\n                        Date: <span className=\"bold\">{formattedDateTime}</span>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              </table>\n            </div>\n          )}\n          {/* Display Console Reports */}\n          {showConsolidateReports && consolidateReports.length > 0 && (\n            <div className=\"Report_container\">\n              <table>\n                <thead className=\"report_thead\">\n                  <tr>\n                    <th colSpan={3} className=\"company_name\">\n                      <h3 style={{ color: \"black\" }}>\n                        Company Name :{\" \"}\n                        <span style={{ color: \"gray\" }}>\n                          {\" \"}\n                          {company.company_name}\n                        </span>{\" \"}\n                      </h3>\n                    </th>\n                    <th rowSpan={2} className=\"company_logo\">\n                      <img\n                        src={`data:image/png;base64,${company.company_logo}`}\n                        alt=\"Company Logo\"\n                        className=\"company-logo\"\n                      />\n                    </th>\n                  </tr>\n                  <tr>\n                    <th>\n                      Date Range:{\" \"}\n                      <span>\n                        {new Date(dateRange.start).toLocaleString()} -{\" \"}\n                        {new Date(dateRange.end).toLocaleString()}\n                      </span>\n                    </th>\n\n                    <th>\n                      User Name :<span>{user}</span>\n                    </th>\n                    <th>\n                      Report Type : <span>Consolidate Reports</span>\n                    </th>\n                  </tr>\n                </thead>\n              </table>\n              <table>\n                <thead className=\"report_reports\">\n                  <tr>\n                    <th>Username</th>\n                    <th>Machine Name</th>\n                    <th>Session Count</th>\n                    <th>Total Duration</th>\n                  </tr>\n                </thead>\n                <tbody className=\"report_tbody\">\n                  {consolidateReports.map((report, index) => (\n                    <tr key={index}>\n                      <td>{report.username}</td>\n                      <td>{report.machine_name}</td>\n\n                      <td>{report.day_session_count}</td>\n                      <td>{formatHoursDuration(report.total_duration)}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <table>\n                <tr>\n                  <td>\n                    <div className=\"info-row-container\">\n                      <div className=\"generated-by\">\n                        Generated By: <span className=\"bold\">user</span>\n                      </div>\n                      <div className=\"date\">\n                        Date: <span className=\"bold\">{formattedDateTime}</span>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              </table>\n            </div>\n          )}\n        </div>\n      </form>\n      </div>\n    </div>\n  );\n};\n\nexport default VamanitReports;\n"],"names":["RangePicker","DatePicker","formatDuration","seconds","concat","Math","floor","minutes","hours","days","formatDateTime","dateTimeString","date","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","getHours","getMinutes","getSeconds","formatHoursDuration","totalDurationInSeconds","round","tokenParsed","userOptions","setUserOptions","useState","user","setUser","dateRange","setDateRange","start","end","value","setValue","startDate","endDate","sessionReports","setSessionReports","dayReports","setDayReports","showSessionReports","setShowSessionReports","showDayReports","setShowDayReports","loader","setLoader","print","setPrint","company","setCompany","company_name","company_logo","consolidateReports","setConsolidateReports","showConsolidateReports","setShowConsolidateReports","activeTab","setActiveTab","React","pc","useContext","PoolContext","componentRef","useRef","token","Userprofile","name","formattedDateTime","toLocaleString","handlePrint","useReactToPrint","content","current","useEffect","axiosInstance","get","process","headers","Authorization","then","response","data","catch","error","console","finally","fetchCompanyDetails","reportType","companyData","find","report_type","_jsx","children","_jsxs","className","type","onSubmit","e","preventDefault","onChange","dates","length","format","showTime","hideDisabledOptions","defaultValue","dayjs","htmlFor","id","target","map","userName","index","ColorRing","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","onClick","fetchSessionReports","url","fetchDayReports","fetchConsolidateReports","ref","colSpan","rowSpan","src","alt","report","username","loginTime","logoutTime","machineName","sessionDuration","machine_name","day_session_count","daily_duration","style","color","total_duration"],"sourceRoot":""}